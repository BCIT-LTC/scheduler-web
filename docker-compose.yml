version: "3.9"

services:

  app:
    image: scheduler-web
    build: 
      context: .
      args:
        - VERSION=dev
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start
    environment:
      - LOCAL_USER=admin
      - LOCAL_PASSWORD=admin
      - API_URL=http://host.docker.internal:8000/api/
      - TZ=America/Vancouver
      - SECRET_KEY=ahuaejsdb
      #OIDC PARAMS
      - DISCOVERY=http://scheduler.local:8080/realms/master/.well-known/openid-configuration
      - CLIENT_ID=slGQesNqqYgOjuQsKrVoNkdO0NrF85zJ
      - CLIENT_SECRET=hvo_secret_T3lfFGtvhicYfjBmEEq8ydwpjucImDYLlPZvGSo9MHvU75EZTT4btqm4iBhi3p8n
      - ISSUER=https://vault.ltc.bcit.ca/v1/identity/oidc/provider/ltc-auth
      - AUTHORIZATION_URL=https://vault.ltc.bcit.ca/ui/vault/identity/oidc/provider/ltc-auth/authorize
      - TOKEN_URL=https://vault.ltc.bcit.ca/v1/identity/oidc/provider/ltc-auth/token
      - USERINFO_URL=https://vault.ltc.bcit.ca/v1/identity/oidc/provider/ltc-auth/userinfo
      - CALLBACK_URL=http://localhost:9000/loginopenid/callback
    volumes:
      - .:/app
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - scheduler-network
    # depends_on:
    #   frontend-builder:
    #     condition:  service_completed_successfully

  # keycloak:
  #   image: quay.io/keycloak/keycloak:latest
  #   command:
  #     - start-dev
  #   ports:
  #     - "8080:8080" 
  #   environment:
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #   networks:
  #     - test-web-network

  # test:
  #   build:
  #     dockerfile: Dockerfile.playwright
  #     args:
  #       - TEST_USER=root
  #   # TODO: the url prefix after http is dependent on the name of the container for the frotend
  #   environment:
  #     - URL_FRONTEND=http://scheduler-web-app-1:9000
  #   restart: on-failure
  #   # depends_on:
  #   #   app:
  #   #     condition: service_healthy
  #   networks:
  #     - test-web-network

  # frontend-builder:
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       npm install
  #       npm run build
  #   image: node:19.4.0-alpine
  #   working_dir: /app
  #   volumes:
  #     - ./client:/app
      # - data:/code/frontend/build/:rw

networks:
  scheduler-network:
    driver: bridge
    name: scheduler-network